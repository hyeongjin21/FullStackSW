-- TCL (Transaction Control Language) : 트랜잭션 제어어

-- 트랜잭션이란?
-- 데이터베이스의 상태를 변화시키기 위해서 수행하는 최소 수행 단위
-- 즉 업무를 처리하기 위한 최소 수행 단위이다

-- 트랜잭션의 4가지 특성
-- Atomicity   (원자성) : All or Nothing, 모두 실행이 되거나 전혀 실행이 되지 않거나
-- Consistency (일관성) : 언제나 일관성 있는 상태로 유지 하는 것
-- Isolation   (고립성) : 트랜잭션이 실행 시 다른 트랜잭션에 영향을 받지 않는 것
-- Durability  (지속석) : 성공적으로 수행된 트랜잭션은 영원히 반영이 되어야한다.

-- TCL의 명령어
-- COMMIT     : 데이터베이스에 영구적으로 저장, 
--              마지막 COMMIT 시점 이후의 트랜잭션 결과를 영구저장       
-- ROLLBACK   : 트랜잭션을 취소하는 명령어, 마지막 COMMIT 시점까지만 복구가 가능하다
-- SAVEPOINT  : 하나의 트랜잭션을 작게 분할하여 저장하는 기능을 수행하는 명령어

-- 세션(SESSION) 이란?
-- 세션이란 어떤 활동을 위한 시간이나 기간을 뜻함
-- 데이터베이스 접속을 시작으로 여러 데이터베이스에서 관련 작업을 수행한 후
-- 접속을 종료하기 까지의 전체 기간을 의미한다
--> 세션이 여러 개 있다는 말은 데이터베이스에 접속하여 사용중인 연결이 여러 개 있다 는 뜻이다

-- 읽기 일관성이란?
--> 데이터베이스는 동시에 접근하여 데이터를 관리, 사용하는 것이 목적이다
-- 그래서 대부분 수많은 세션이 동시에 연결이 된 상태에서 작업을 한다.
-- 트랜잭션을 완료되기 전까지 데이터를 직접 조작하는 세션 외에 다른 세션에서는
-- 데이터 조작 전 상태의 데이터만 조회가 가능하다
-- 이것을 읽기 일관성을 보장한다 라고 한다

SELECT * FROM EMPLOYEES;

UPDATE EMPLOYEES
   SET FIRST_NAME = 'Steven' ,LAST_NAME = 'King'
 WHERE EMPLOYEE_ID = 100;

COMMIT;

-- LOCK
-- 특정 세션에서 조작중인 데이터는 트랜잭션이 완료 (COMMIT,ROLLBACK)되기 전까지는
-- 다른 세션에서는 해당 데이터를 조작할 수 없는 상태
-- 둘 이상의 세션이 같은 데이터(행) 조작하려고 할때 충돌하는 현상
-- 서로 다른 행을 조작하면 LOCK이 발생이 안함

SELECT * FROM EMPLOYEES;
-- 515.123.4567
UPDATE EMPLOYEES
   SET EMAIL = 'EMAIL' -- SKING
 WHERE EMPLOYEE_ID = 100;   

-- 무한 로딩 상태 > LOCK이 걸렸다
-- 특정 세션에서 데이터 조작을 완료(COMMIT) 될때까지 다른 세션에서
-- 해당 데이터 조작을 기다리는 현상을 행(HANG)이라고 한다 > 매달려 있다 라고 표현한다.

--> 두개의 세션이 접속 했을때 서로 다른 세션에서 같은 행을 조작을 하게 되면
-- 먼저 조작을 하는 세션이 커밋을 하기 전에는 작업을 못한다
-- COMMIT 명령어가 중요하다








